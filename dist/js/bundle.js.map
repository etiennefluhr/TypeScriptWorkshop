{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/typescript/KeyCodes.ts","webpack:///./src/typescript/KeySystem.ts","webpack:///./src/typescript/Mfg.ts","webpack:///./src/typescript/MfgDemo.ts","webpack:///./src/typescript/MfgRect.ts","webpack:///./src/typescript/index.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/typescript/index.ts\");\n","\n/** ****************************************************************************************************************\n *   All key codes that are used in the game.\n *******************************************************************************************************************/\nexport abstract class KeyCodes\n{\n    /** The keycode that represents the 'ARROW LEFT' key. */\n    public      static  readonly    KEY_LEFT                :string                         = 'ArrowLeft';\n    /** The keycode that represents the 'ARROW UP' key. */\n    public      static  readonly    KEY_UP                  :string                         = 'ArrowUp';\n    /** The keycode that represents the 'ARROW RIGHT' key. */\n    public      static  readonly    KEY_RIGHT               :string                         = 'ArrowRight';\n    /** The keycode that represents the 'ARROW DOWN' key. */\n    public      static  readonly    KEY_DOWN                :string                         = 'ArrowDown';\n\n    /** The keycode that represents the 'W' key. */\n    public      static  readonly    KEY_W                   :string                         = 'KeyW';\n    /** The keycode that represents the 'A' key. */\n    public      static  readonly    KEY_A                   :string                         = 'KeyA';\n    /** The keycode that represents the 'S' key. */\n    public      static  readonly    KEY_S                   :string                         = 'KeyS';\n    /** The keycode that represents the 'D' key. */\n    public      static  readonly    KEY_D                   :string                         = 'KeyD';\n\n    /** The keycode that represents the 'Q' key. */\n    public      static  readonly    KEY_Q                   :string                         = 'KeyQ';\n    /** The keycode that represents the 'E' key. */\n    public      static  readonly    KEY_E                   :string                         = 'KeyE';\n\n    /** The keycode that represents the 'F' key. */\n    public      static  readonly    KEY_F                   :string                         = 'KeyF';\n    /** The keycode that represents the 'R' key. */\n    public      static  readonly    KEY_R                   :string                         = 'KeyR';\n\n    /** The keycode that represents the 'Y' key. This is affected by the EN keyboard scheme. */\n    public      static  readonly    KEY_Y                   :string                         = 'KeyZ';\n    /** The keycode that represents the 'X' key. */\n    public      static  readonly    KEY_X                   :string                         = 'KeyX';\n\n    /** The keycode that represents the 'P' key. */\n    public      static  readonly    KEY_P                   :string                         = 'KeyP';\n\n    /** The keycode that represents the 'ENTER' key. */\n    public      static  readonly    KEY_ENTER               :string                         = 'Enter';\n    /** The keycode that represents the 'ESCAPE' key. */\n    public      static  readonly    KEY_ESCAPE              :string                         = 'Escape';\n    /** The keycode that represents the 'SPACE' key. */\n    public      static  readonly    KEY_SPACE               :string                         = 'Space';\n    /** The keycode that represents the 'LEFT CONTROL' key. */\n    public      static  readonly    KEY_CTRL_LEFT           :string                         = 'ControlLeft';\n    /** The keycode that represents the 'LEFT SHIFT' key. */\n    public      static  readonly    KEY_SHIFT_LEFT          :string                         = 'ShiftLeft';\n\n    /** The keycode that represents the '1' key. */\n    public      static  readonly    KEY_1                   :string                         = 'Digit1';\n    /** The keycode that represents the '2' key. */\n    public      static  readonly    KEY_2                   :string                         = 'Digit2';\n    /** The keycode that represents the '3' key. */\n    public      static  readonly    KEY_3                   :string                         = 'Digit3';\n    /** The keycode that represents the '4' key. */\n    public      static  readonly    KEY_4                   :string                         = 'Digit4';\n    /** The keycode that represents the '5' key. */\n    public      static  readonly    KEY_5                   :string                         = 'Digit5';\n}\n","\n/** ****************************************************************************************************************\n *   The key system that manages all pressed keys.\n *******************************************************************************************************************/\nexport class KeySystem\n{\n    /** All 'pressed' information for all keys. */\n    private                         keysPressed             :boolean[]                      = [];\n    /** All 'needs release' information for all keys. */\n    private                         keysNeedRelease         :boolean[]                      = [];\n\n    /** ************************************************************************************************************\n     *   Creates a new key system.\n     ***************************************************************************************************************/\n    public constructor()\n    {\n        window.addEventListener( 'keydown',     ( event:Event ) => { this.onKeyDown( event ) }, false );\n        window.addEventListener( 'keyup',       ( event:Event ) => { this.onKeyUp(   event ) }, false );\n\n        window.addEventListener( 'onkeydown',   ( event:Event ) => { this.onKeyDown( event ) }, false );\n        window.addEventListener( 'onkeyup',     ( event:Event ) => { this.onKeyUp(   event ) }, false );\n    }\n\n    /** ************************************************************************************************************\n     *   Being invoked by the system when a key is pressed.\n     *\n     *   @param event The system's propagated key event.\n     ***************************************************************************************************************/\n    public onKeyDown( event:Event ) : void\n    {\n        const keyCode:string = ( event as KeyboardEvent ).code;\n\n        if (\n            !this.keysNeedRelease[ keyCode ]\n        )\n        {\n            this.keysPressed[ keyCode ] = true;\n        }\n    }\n\n    /** ************************************************************************************************************\n     *   Being invoked by the system when a key is released.\n     *\n     *   @param event The system's propagated key event.\n     ***************************************************************************************************************/\n    public onKeyUp( event:Event ) : void\n    {\n        const keyCode:string = ( event as KeyboardEvent ).code;\n\n        this.keysPressed[     keyCode ] = false;\n        this.keysNeedRelease[ keyCode ] = false;\n    }\n\n    /** ************************************************************************************************************\n     *   Checks if the key with the given keyCode is currently pressed.\n     *\n     *   @param  keyCode The keyCode of the key to return pressed state.\n     *\n     *   @return         <code>true</code> if this key is currently pressed.\n     *                   Otherwise <code>false</code>.\n     ***************************************************************************************************************/\n    public isPressed( keyCode:string ) : boolean\n    {\n        return this.keysPressed[ keyCode ];\n    }\n\n    /** ************************************************************************************************************\n     *   Flags that a key needs release before being able to be pressed again.\n     *\n     *   @param keyCode The keyCode of the key to mark as 'needs key release'.\n     ***************************************************************************************************************/\n    public setNeedsRelease( keyCode:string ) : void\n    {\n        this.keysNeedRelease[  keyCode ] = true;\n        this.keysPressed[      keyCode ] = false;\n    }\n\n    /** ************************************************************************************************************\n     *   Flags all keys as released, forcing the user to press certain keys again.\n     *   Handy to invoke when the game screen loses the focus.\n     ***************************************************************************************************************/\n    public releaseAllKeys() : void\n    {\n        this.keysPressed = [];\n    }\n}\n","/**\n     *   The main class containing the point of entry.\n     */\n// @ts-ignore\nimport {MfgDemo} from \"./MfgDemo\";\n\nexport class Mfg\n    {\n        /** The singleton instance of the demo. */\n        public          static          demo                :MfgDemo                = null;\n        /**\n         *   The application's point of entry.\n         */\n        public static main():void\n        {\n            Mfg.setDocumentTitle();\n            Mfg.styleHtmlBody();\n\n            Mfg.demo = new MfgDemo();\n            Mfg.demo.init();\n\n        }\n\n        /**\n         *   Dynamically sets the document's title.\n         */\n        private static setDocumentTitle():void\n        {\n            document.title = \"TypeScript Minimal Primer, (c) 2020 Mayflower GmbH, v. 1.0\";\n        }\n\n        /**\n         *   Dynamically applies css to the HTML body tag.\n         */\n        private static styleHtmlBody():void\n        {\n            let style:CSSStyleDeclaration = document.body.style;\n            style.backgroundColor = \"grey\";\n            style.textAlign       = \"center\";\n            style.margin          = \"25px\";\n        }\n    }\n","import { MfgRect } from \"./MfgRect\";\nimport { KeyCodes } from \"./KeyCodes\";\nimport { KeySystem } from \"./KeySystem\";\n\n/**\n *   Handles the demo logic.\n */\nexport class MfgDemo\n{\n    /** The canvas rendering context for all 2D drawing operations. */\n    private                 canvasContext           :CanvasRenderingContext2D       = null;\n    /** The key system. */\n    private                 keySystem               :KeySystem                      = null;\n\n    /** All rects to show in the demo. */\n    private                 items                   :Array<MfgRect>                 = null;\n\n    private                 player                  :MfgRect                        = null;\n\n    /**\n     *   Creates a new demo logic.\n     */\n    public constructor()\n    {\n    }\n\n    /**\n     *   Inits this demo from scratch.\n     */\n    public init():void\n    {\n        this.initCanvas();\n        this.initKeySystem();\n        this.initGameElements();\n\n        this.startDemoLoop();\n    }\n\n    /**\n     *   Inits the canvas and appends it to the HTML body element.\n     */\n    private initCanvas():void\n    {\n        let canvasTag:HTMLCanvasElement = document.createElement(\"canvas\");\n\n        canvasTag.width                 = 900;\n        canvasTag.height                = 500;\n        canvasTag.style.backgroundColor = \"white\";\n\n        document.body.appendChild(canvasTag);\n\n        this.canvasContext = canvasTag.getContext(\"2d\");\n    }\n\n    /**\n     *   Inits the key system.\n     */\n    private initKeySystem():void\n    {\n        this.keySystem = new KeySystem();\n    }\n\n    /**\n     *   Inits all rects for this level.\n     */\n    private initGameElements():void\n    {\n        this.items = [\n            new MfgRect(125, 25,  75,  75,  \"orange\"),\n            new MfgRect(300, 150, 120, 30,  \"yellow\"),\n            new MfgRect(550, 250, 30,  120, \"red\"   ),\n            new MfgRect(620, 75,  150, 50,  \"grey\"  ),\n        ];\n\n        this.player = new MfgRect(100, 200, 50, 40, \"blue\");\n\n        console.log(\"Created [\" + this.items.length + \"] rects.\");\n    }\n\n    /**\n     *   Starts the endless demo loop.\n     */\n    private startDemoLoop():void\n    {\n        window.setInterval(this.tick, 10);\n    }\n\n    /**\n     *   Handles one demo tick.\n     */\n    private tick=()=>\n    {\n        this.render();\n        this.draw();\n    };\n\n    /**\n     *   Renders the current game tick.\n     */\n    private render():void\n    {\n        for (let item of this.items) {\n            item.y += 0.5;\n        }\n\n        if ( this.keySystem.isPressed( KeyCodes.KEY_RIGHT ) )\n        {\n            this.player.x += 5.0;\n        }\n\n        if ( this.keySystem.isPressed( KeyCodes.KEY_LEFT ) )\n        {\n            this.player.x -= 5.0;\n        }\n\n        if ( this.keySystem.isPressed( KeyCodes.KEY_UP ) )\n        {\n            this.player.y -= 5.0\n        }\n\n        if ( this.keySystem.isPressed( KeyCodes.KEY_DOWN ) )\n        {\n            this.player.y += 5.0\n        }\n\n        // check collision of player with item\n        for (let item of this.items) {\n\n            if ( this.player.collidesWithRect( item  ) )\n            {\n                // console.log( \"kollision!\" );\n\n                item.color = 'transparent';\n            }\n        }\n    }\n\n    /**\n     *   Draws the current game tick.\n     */\n    private draw():void\n    {\n        this.canvasContext.clearRect(0, 0, 900, 500);\n\n        for (let item of this.items) {\n            item.draw(this.canvasContext);\n        }\n        // this.canvasContext.clearRect(0, 0, 900, 500);\n\n        this.player.draw(this.canvasContext);\n\n\n    }\n}\n","/**\n *   A rectangular in 2D space.\n */\nexport class MfgRect\n{\n    /** The left coordinate. */\n    public              x               :number                     = 0;\n    /** The top coordinate. */\n    public              y               :number                     = 0;\n    /** The horizontal dimension. */\n    public              width           :number                     = 0;\n    /** The vertical dimension. */\n    public              height          :number                     = 0;\n    /** The fill color. */\n    public              color           :string                     = null;\n\n    /**\n     *   Constructs a new rectangular in 2D space.\n     *\n     *   @param x      Left coordinate.\n     *   @param y      Top coordinate.\n     *   @param width  Horizontal dimension.\n     *   @param height Vertical dimension.\n     *   @param color  Fill color.\n     */\n    public constructor(x:number, y:number, width:number, height:number, color:string)\n    {\n        this.x      = x;\n        this.y      = y;\n        this.width  = width;\n        this.height = height;\n        this.color  = color;\n    }\n\n    /**\n     *   Fills a rect with the specified dimensions and color.\n     *\n     *   @param ctx The rendering context.\n     */\n    public draw(ctx:CanvasRenderingContext2D):void\n    {\n        ctx.fillStyle = this.color;\n        ctx.fillRect( this.x, this.y, this.width, this.height );\n    }\n\n    /*****************************************************************************\n     *   Checks if the given rect intersects this rect.\n     *\n     *   @param  rect    The rect to check for intersection.\n     *   @return         <code>true</code> if the rects collide.\n     *                   Otherwise <code>false</code>.\n     *****************************************************************************/\n    public collidesWithRect( rect:MfgRect ):boolean\n    {\n        return !(\n                this.x                  >= rect.x + rect.width\n            ||  this.x  + this.width    <= rect.x\n            ||  this.y                  >= rect.y + rect.height\n            ||  this.y  + this.height   <= rect.y\n        );\n    }\n}","\n    import { Mfg } from \"./Mfg\";\n\n    /** ****************************************************************************************************************\n    *   Being invoked when the page is loaded completely.\n    *******************************************************************************************************************/\n    window.onload = () : void  =>\n    {\n        Mfg.main();\n    };\n\n    /** ****************************************************************************************************************\n    *   Being invoked when the page is left.\n    *******************************************************************************************************************/\n    window.onunload = () : void  =>\n    {\n        // no actions required on leaving website\n    };\n"],"sourceRoot":""}